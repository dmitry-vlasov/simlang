import net/url_parameter;
import fs/filesystem;
import parser;
import typecheck;
import exp2bc;
import exec;

main() {
	file = changeFileExt(getUrlParameter("exec"), ".sl");
	if (file == "") {
		println("no file to run. Please pass file name with exec=<file> option.")
	} else if (!fileExists(file)) {
		println("file: " + file + " don't exist.");
	} else {
		code = getFileContent(file);
		err = makeErr();
		maybeApply(parse(code, err), \prog -> {
			if (isUrlParameterTrue("show-parsed") || isUrlParameterTrue("show-all")) {
				println("program:\n" + exp2s(prog));
			}
			maybeApply(typecheck(prog, err), \typed -> {
				if (isUrlParameterTrue("show-parsed") || isUrlParameterTrue("show-all")) {
					println("typed:\n" + texp2s(typed));
				}
				maybeApply(prog2bc(typed, err), \bytecode -> {
					if (isUrlParameterTrue("show-bytecode") || isUrlParameterTrue("show-all")) {
						println(bcode2s(bytecode));
					}
					if (!isUrlParameterFalse("run")) {
						in_param = getUrlParameter("in");
						io = if (in_param == "") {
							Io(\ -> readUntil("\n"), println);
						} else {
							in_seq = strSplit(in_param, ",");
							in_counter = ref 0;
							Io(
								\ -> if (^in_counter >= length(in_seq)) "" else {
									s = in_seq[^in_counter];
									in_counter := ^in_counter + 1;
									s;
								},
								println
							)
						}
						execBcCode(bytecode, isUrlParameterTrue("trace"), err, io);
					}
				});
			});
		});
	}
	quit(0);
}